{"version":3,"sources":["config/Constant.js","components/SideNavigation.js","utils/Logger.js","utils/AppHistory.js","components/Home.js","containers/LoadingBarContainer.js","config/Config.js","utils/Helper.js","components/ErrorBoundary.js","App.js","App2.js","serviceWorker.js","stores/AppStore.js","stores/UiStore.js","utils/LoadingBar.js","utils/Api.js","stores/TestStore.js","stores/CommonStoreInterface.js","stores/company/basic.js","stores/company/inchon.js","stores/company/seoul.js","stores/company/company.js","stores/company/menu.js","stores/company/config.js","stores/CompanyStore.js","stores/stores.js","stores/RootStore.js","index.js"],"names":["Constant","menuMappingInfos","title","linkUrl","SideNavigation","inject","withRouter","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","handleDrawerOpen","bind","assertThisInitialized","handleDrawerClose","clickMenu","setState","_this2","classes","react_default","a","createElement","CssBaseline_default","AppBar_default","position","className","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","appStore","headTitle","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","loginInfo","name","ChevronLeft_default","Divider_default","List_default","map","info","Link","to","key","ListItem_default","button","style","backgroundColor","success","ListItemText_default","primary","React","Component","withStyles","theme","root","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","Logger","debug","message","console","warn","error","AppHistory","createHashHistory","Home","changeHeadTitle","LoadingBarContainer","loadingBarStyle","displayLoadingBar","uiStore","id","Config","defaultCompanyCode","COMPANY_CODE_SEOUL","defaultUri","performanceTesting","Helper","convertEmptyValue","value","undefined","defaultEmptyValue","checkAuthByUrl","url","indexOf","push","getQueryStringValue","decodeURIComponent","window","location","search","replace","RegExp","encodeURIComponent","copyToClipboard","range","selection","textArea","document","getElementById","navigator","userAgent","match","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","select","execCommand","alert","saveInfoToLocalStorage","localStorage","setItem","JSON","stringify","getInfoByLocalStorage","jsonString","getItem","parse","ErrorBoundary","queue","hasError","refreshPage","copyToClipboardByTextArea","textAreaId","errorObject","errorType","ERROR_TYPE_REACT","stack","componentStack","reload","errorObjectConvertString","shortid","generate","opacity","height","Button_default","event","children","App","historyBlockHandler","displayErrorModal","appErrorObject","handleGlobalError","closeErrorModal","lineNumber","column","displayErrorMessage","statck","ERROR_TYPE_CORE","process","APP_ENV_DEVELOPMENT","onerror","history","block","action","init","DEV_TOOL_COMPONENT","mobx_react_devtools_default","components_ErrorBoundary","components_SideNavigation","marginTop","Route","exact","path","component","containers_LoadingBarContainer","reactstrap_es","isOpen","toggle","onChange","Boolean","hostname","AppStore","rootStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","appVersion","observable","UiStore","LoadingBar","show","stores","showLoadingBar","hideLoadingBar","Api","axios","baseURL","disableLoadingBar","defaults","timeout","apiCallTimeout","headers","post","interceptors","request","use","config","data","authorization","token","Promise","reject","response","code","status","TestStore","apiUri","params","length","get","prototype","CommonStoreInterface","CommonStoreInterface_descriptor","CommonStoreInterface_descriptor2","then","result","runInAction","basicCompanyInfo","label1","label2","info1","info2","info2-1","basicMenuInfo","basicConfigInfo","contractInputFirstSize","contractInputSecondSize","contractInputThirdSize","inchonCompanyInfo","_","defaultsDeep","inchonLabel1","inchonInfo","inchonMenuInfo","unionBy","except","filter","inchonConfigInfo","seoulCompanyInfo","seoulLabel1","seoulInfo","seoulMenuInfo","seoulConfigInfo","CompanyInfo","COMPANY_CODE_INCHON","MenuInfo","ConfigInfo","CompanyStore","CompanyStore_descriptor","CompanyStore_descriptor2","CompanyStore_descriptor3","CompanyStore_descriptor4","companyInfo","companyCode","menuInfo","configInfo","href","RootStore","testStore","companyStore","nativeStore","frontIssueStore","urlQuery","queryString","entryFullUri","hash","substr","entryUri","listen","pathname","configure","enforceActions","AppComponent","src_App_0","appType","App2","setCompanyCode","ReactDOM","render","index_module","HashRouter","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["const Constant = {};\n\n// 앱 빌드 환경 정보\nConstant.APP_ENV_DEVELOPMENT = 'development';\nConstant.APP_ENV_PRODUCTION = 'production';\n\n// error type\nConstant.ERROR_TYPE_CORE = 'core';\nConstant.ERROR_TYPE_REACT = 'react';\nConstant.ERROR_TYPE_APP = 'app';\n\n// company code\nConstant.COMPANY_CODE_SEOUL = 'seoul';\nConstant.COMPANY_CODE_INCHON = 'inchon';\n\nexport default Constant;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nconst menuMappingInfos = [{ title: '홈', linkUrl: '/home' }];\n\n@withRouter\n@inject('appStore', 'companyStore')\n@observer\nclass SideNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.clickMenu = this.clickMenu.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: true });\n  }\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  }\n\n  clickMenu() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return (\n      <div>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: this.state.open\n          })}\n        >\n          <Toolbar disableGutters={!this.state.open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.hide\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {this.props.appStore.headTitle}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={this.state.open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            {this.props.appStore.loginInfo\n              ? this.props.appStore.loginInfo.name\n              : ''}\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {menuMappingInfos.map(info => {\n              return (\n                <Link\n                  className=\"nav-link\"\n                  to={info.linkUrl}\n                  onClick={this.clickMenu}\n                  key={info.title}\n                >\n                  <ListItem\n                    button\n                    key={info.title}\n                    style={{ backgroundColor: info.success ? '#28a745' : '' }}\n                  >\n                    <ListItemText primary={info.title} />\n                  </ListItem>\n                </Link>\n              );\n            })}\n          </List>\n          <Divider />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SideNavigation);\n","const Logger = {\n  debug: function(message) {\n    // eslint-disable-next-line\n    console.debug(message);\n  },\n  info: function(message) {\n    // eslint-disable-next-line\n    console.info(message);\n  },\n  warn: function(message) {\n    // eslint-disable-next-line\n    console.warn(message);\n  },\n  error: function(message) {\n    // 에러정보 전송시 추가 정보로 다음을 전달 : appStore.deviceInfo, appStore.loginInfo, process.env\n    // eslint-disable-next-line\n    console.error(message);\n  }\n};\n\nexport default Logger;\n","import { createHashHistory } from 'history';\nconst AppHistory = createHashHistory();\nexport default AppHistory;\n","import React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport Logger from '../utils/Logger';\nimport AppHistory from '../utils/AppHistory';\n\n@withRouter\n@inject('appStore')\n@observer\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // location.search ---> '' 값임. 적용않됨\n    // Logger.info('location.search : ' + location.search);\n    // Logger.info('AppHistory.location.search : ' + AppHistory.location.search);\n    // Logger.info('props.location.search : ' + this.props.location.search);\n  }\n\n  componentDidMount() {\n    this.props.appStore.changeHeadTitle('관리자 개발 이슈 테스트');\n  }\n  render() {\n    return (\n      <div>\n        <h1>프론트 개발 이슈 테스트</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\n\n@withRouter\n@inject('uiStore')\n@observer\nclass LoadingBarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let loadingBarStyle = {};\n    let displayLoadingBar = this.props.uiStore.displayLoadingBar;\n    if (displayLoadingBar) {\n      loadingBarStyle.display = 'block';\n    } else {\n      loadingBarStyle.display = 'none';\n    }\n    return (\n      <div id=\"loadingbar\" style={loadingBarStyle}>\n        <div id=\"loader\" />\n      </div>\n    );\n  }\n}\n\nexport default LoadingBarContainer;\n","import Constant from './Constant';\n\nconst Config = {};\n\n// ajax timeout\nConfig.apiCallTimeout = 30000;\n\n// 메시지 날짜 foramt\nConfig.dateDisplayFormat = 'YYYY-MM-DD hh:mm';\n\n// 계약번호\nConfig.contractNo = '123123';\n\n// 빈값일 경우 보여주는 문자\nConfig.defaultEmptyValue = '-';\n\n// 기본 CompanyCode\nConfig.defaultCompanyCode = Constant.COMPANY_CODE_SEOUL;\n\n// 기본 라우팅 uri\nConfig.defaultUri = 'home';\n\n// performace test 여부\nConfig.performanceTesting = true;\n\nexport default Config;\n","import Config from '../config/Config';\nimport AppHistory from '../utils/AppHistory';\n\nfunction convertEmptyValue(value) {\n  if (value === undefined || value === null || value === '') {\n    return Config.defaultEmptyValue;\n  } else {\n    return value;\n  }\n}\n\nfunction checkAuthByUrl(url) {\n  if (url && url.indexOf('accordion-b') !== -1) {\n    AppHistory.push('/error-auth');\n  }\n}\n\nfunction getQueryStringValue(key) {\n  return decodeURIComponent(\n    window.location.search.replace(\n      new RegExp(\n        '^(?:.*[&\\\\?]' +\n          encodeURIComponent(key).replace(/[\\.\\+\\*]/g, '\\\\$&') +\n          '(?:\\\\=([^&]*))?)?.*$',\n        'i'\n      ),\n      '$1'\n    )\n  );\n}\n\nfunction copyToClipboard(id) {\n  let textArea = document.getElementById(id);\n  if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n    var range, selection;\n    range = document.createRange();\n    range.selectNodeContents(textArea);\n    selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n    textArea.setSelectionRange(0, 999999);\n  } else {\n    textArea.select();\n  }\n  document.execCommand('copy');\n  alert('복사되었습니다');\n}\n\nfunction saveInfoToLocalStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction getInfoByLocalStorage(key) {\n  let jsonString = localStorage.getItem(key);\n  if (jsonString) {\n    return JSON.parse(jsonString);\n  } else {\n    return null;\n  }\n}\n\nconst Helper = {\n  convertEmptyValue: convertEmptyValue,\n  checkAuthByUrl: checkAuthByUrl,\n  getQueryStringValue: getQueryStringValue,\n  copyToClipboard: copyToClipboard,\n  saveInfoToLocalStorage: saveInfoToLocalStorage,\n  getInfoByLocalStorage: getInfoByLocalStorage\n};\n\nexport default Helper;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport shortid from 'shortid';\nimport Logger from '../utils/Logger';\nimport Helper from '../utils/Helper';\nimport Button from '@material-ui/core/Button';\nimport Constant from '../config/Constant';\n\n@withRouter\n@inject('appStore')\n@observer\nclass ErrorBoundary extends React.Component {\n  queue = [];\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n    this.refreshPage = this.refreshPage.bind(this);\n    this.copyToClipboardByTextArea = this.copyToClipboardByTextArea.bind(this);\n  }\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  copyToClipboardByTextArea(textAreaId) {\n    Helper.copyToClipboard(textAreaId);\n  }\n\n  componentDidCatch(error, info) {\n    let errorObject = {};\n    errorObject.errorType = Constant.ERROR_TYPE_REACT;\n    if (error.message) {\n      errorObject.message = error.message;\n    }\n    if (error.stack) {\n      errorObject.stack = error.stack;\n    }\n    if (info && info.componentStack) {\n      errorObject.componentStack = info.componentStack;\n    }\n    this.setState({\n      errorObject: errorObject\n    });\n    Logger.error(JSON.stringify(errorObject));\n  }\n\n  refreshPage() {\n    window.location.reload();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      let errorObject = this.state.errorObject;\n      let errorObjectConvertString = '';\n      if (errorObject) {\n        errorObjectConvertString = JSON.stringify(errorObject);\n      }\n      let textAreaId = shortid.generate();\n      return (\n        <div>\n          <textarea\n            id={textAreaId}\n            value={errorObjectConvertString}\n            style={{\n              display: 'block',\n              opacity: 0,\n              width: '0px',\n              height: '0px'\n            }}\n          />\n          <Button\n            color=\"primary\"\n            onClick={event => this.copyToClipboardByTextArea(textAreaId)}\n          >\n            에러 복사\n          </Button>\n          <br />\n          <Button color=\"primary\" onClick={this.refreshPage}>\n            페이지 리프레쉬\n          </Button>\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import DevTools from 'mobx-react-devtools';\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Route, withRouter } from 'react-router-dom';\nimport SideNavigation from './components/SideNavigation';\nimport Home from './components/Home';\nimport LoadingBarContainer from './containers/LoadingBarContainer';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nimport './App.css';\nimport Logger from './utils/Logger';\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport shortid from 'shortid';\nimport Helper from './utils/Helper';\nimport Constant from './config/Constant';\n\n@withRouter\n@inject('appStore')\n@observer\nclass App extends Component {\n  historyBlockHandler = null;\n\n  constructor(props) {\n    super(props);\n    this.state = { displayErrorModal: false, appErrorObject: null };\n    this.handleGlobalError = this.handleGlobalError.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.copyToClipboardByTextArea = this.copyToClipboardByTextArea.bind(this);\n  }\n\n  handleGlobalError(message, url, lineNumber, column, errorObject) {\n    if (errorObject && typeof errorObject === 'string') {\n      errorObject = {\n        message: errorObject\n      };\n    }\n    let displayErrorMessage = '';\n    displayErrorMessage = displayErrorMessage + 'url : ' + url + '\\n';\n    displayErrorMessage =\n      displayErrorMessage + 'lineNumber : ' + lineNumber + '\\n';\n    displayErrorMessage = displayErrorMessage + 'column : ' + column + '\\n';\n    displayErrorMessage =\n      displayErrorMessage +\n      'message : ' +\n      (errorObject && errorObject.message\n        ? errorObject.message\n        : 'NO MESSAGE') +\n      '\\n';\n    errorObject = errorObject || {};\n    errorObject.message = displayErrorMessage;\n    let appErrorObject = { message: errorObject.message };\n    if (errorObject.stack) {\n      appErrorObject.statck = errorObject.stack;\n    }\n    appErrorObject.errorType =\n      errorObject.errorType || Constant.ERROR_TYPE_CORE;\n    if (process.env.APP_ENV === Constant.APP_ENV_DEVELOPMENT) {\n      this.setState({\n        displayErrorModal: true,\n        appErrorObject: appErrorObject\n      });\n    }\n    Logger.error('appErrorObject : ' + JSON.stringify(appErrorObject));\n    return false;\n  }\n\n  copyToClipboardByTextArea(textAreaId) {\n    Helper.copyToClipboard(textAreaId);\n  }\n\n  closeErrorModal() {\n    this.setState({ displayErrorModal: false });\n  }\n\n  init() {\n    Logger.info('App init call');\n    Logger.info('process.env : ' + JSON.stringify(process.env));\n    window.onerror = this.handleGlobalError;\n    this.historyBlockHandler = this.props.history.block((location, action) => {\n      Logger.info('on route block');\n      return true;\n    });\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    if (this.historyBlockHandler) {\n      this.historyBlockHandler();\n    }\n  }\n\n  render() {\n    let mainContainerStyle = { marginTop: 60 };\n    let errorObjectConvertString = '';\n    if (this.state.appErrorObject) {\n      errorObjectConvertString = JSON.stringify(this.state.appErrorObject);\n    }\n    let textAreaId = shortid.generate();\n    let DEV_TOOL_COMPONENT = null;\n    if (process.env.APP_ENV === Constant.APP_ENV_DEVELOPMENT) {\n      DEV_TOOL_COMPONENT = <DevTools />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <div>\n          {DEV_TOOL_COMPONENT}\n          <SideNavigation />\n          <div style={mainContainerStyle}>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/home\" component={Home} />\n          </div>\n          {/* {라우팅 설정 end} */}\n          <LoadingBarContainer />\n          <Modal\n            isOpen={this.state.displayErrorModal}\n            toggle={this.closeErrorModal}\n            id=\"modalContainer\"\n          >\n            <ModalHeader toggle={this.closeErrorModal}>에러모달</ModalHeader>\n            <ModalBody>\n              {/* {errorObjectConvertString} */}\n              <textarea\n                id={textAreaId}\n                value={errorObjectConvertString}\n                onChange={() => {}}\n                style={{\n                  display: 'block',\n                  opacity: 0,\n                  width: '0px',\n                  height: '0px'\n                }}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"primary\"\n                onClick={event => this.copyToClipboardByTextArea(textAreaId)}\n              >\n                에러 복사\n              </Button>\n              <Button color=\"primary\" onClick={this.closeErrorModal}>\n                닫기\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Logger from './utils/Logger';\n\n@withRouter\n@inject('appStore')\n@observer\nclass App extends Component {\n  init() {\n    Logger.info('App init call');\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ marginTop: 60 }}>App2</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from 'mobx';\n\nclass AppStore {\n  @observable headTitle = '관리자 개발 이슈 테스트';\n  @observable appVersion = '';\n  @observable history = null;\n  @observable loginInfo = null;\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action\n  changeHeadTitle(title) {\n    this.headTitle = title;\n  }\n\n  @action\n  changeAppVersion(appVersion) {\n    this.appVersion = appVersion;\n  }\n\n  @action\n  setLoginInfo(loginInfo) {\n    this.loginInfo = loginInfo;\n  }\n}\n\nexport default AppStore;\n","import { observable, action } from 'mobx';\n\nclass UiStore {\n  @observable displayLoadingBar = false;\n\n  @action\n  showLoadingBar() {\n    this.displayLoadingBar = true;\n  }\n\n  @action\n  hideLoadingBar() {\n    this.displayLoadingBar = false;\n  }\n}\n\nexport default UiStore;\n","import stores from '../stores/stores';\n\nfunction show() {\n  stores.uiStore.showLoadingBar();\n}\n\nfunction hide() {\n  stores.uiStore.hideLoadingBar();\n}\n\nconst LoadingBar = {\n  show: show,\n  hide: hide\n};\n\nexport default LoadingBar;\n","import axios from 'axios';\nimport Config from '../config/Config';\nimport Logger from './Logger';\nimport AppHistory from '../utils/AppHistory';\nimport LoadingBar from '../utils/LoadingBar';\nimport stores from '../stores/stores';\n\nlet API_URL = '/api/gas/';\n\nconst Api = axios.create({\n  baseURL: API_URL,\n  disableLoadingBar: false\n});\n\nApi.defaults.timeout = Config.apiCallTimeout;\nApi.defaults.headers.post['Content-Type'] = 'application/json';\n\nApi.interceptors.request.use(\n  function(config) {\n    Logger.info('api request : ' + JSON.stringify(config.data));\n    config.headers.authorization = stores.appStore.loginInfo\n      ? stores.appStore.loginInfo.token\n      : '';\n    if (!config.disableLoadingBar) {\n      LoadingBar.show();\n    }\n    return config;\n  },\n  function(error) {\n    Logger.error(JSON.stringify(error));\n    return Promise.reject(error);\n  }\n);\n\nApi.interceptors.response.use(\n  function(response) {\n    // Logger.info('api response : ' + JSON.stringify(response.data));\n    if (response.data && response.data.code) {\n      if (response.data.code === 404) {\n        AppHistory.push('/error-client');\n      } else if (response.data.code === 403) {\n        AppHistory.push('/error-auth');\n      } else if (response.data.code === 500) {\n        AppHistory.push('/error-server');\n      }\n    }\n    LoadingBar.hide();\n    return response;\n  },\n  function(error) {\n    Logger.error('sever error : ' + JSON.stringify(error));\n    if (error.response.status === 404) {\n      AppHistory.push('/error-client');\n    } else if (error.response.status === 403) {\n      AppHistory.push('/error-auth');\n    } else if (error.response.status === 500) {\n      AppHistory.push('/error-server');\n    }\n    LoadingBar.hide();\n    return Promise.reject(error);\n  }\n);\n\nexport default Api;\n","import CommonStoreInterface from './CommonStoreInterface';\n\nclass TestStore extends CommonStoreInterface {\n  constructor(rootStore, apiUri) {\n    super(apiUri);\n    this.rootStore = rootStore;\n  }\n  search(params) {\n    if (this.data.length === 0) {\n      super.search(params);\n    }\n  }\n}\n\nexport default TestStore;\n","import { observable, action, runInAction } from 'mobx';\nimport Api from '../utils/Api';\n\nclass CommonStoreInterface {\n  @observable\n  apiUri = '';\n\n  @observable\n  data = [];\n\n  constructor(apiUri) {\n    this.apiUri = apiUri;\n  }\n\n  @action\n  clear() {\n    this.data = [];\n  }\n\n  @action\n  search(params) {\n    Api.get(this.apiUri, {\n      params: params\n    }).then(result => {\n      runInAction('CommonStoreInterface search', () => {\n        this.data = result.data.data;\n      });\n    });\n  }\n}\n\nexport default CommonStoreInterface;\n","let companyInfo = {\n  label1: 'basic',\n  label2: 'basic2',\n  info1: {\n    label1: 'info1-basic1',\n    label2: 'info1-basic2'\n  },\n  info2: {\n    label1: 'info2-basic1',\n    label2: 'info2-basic2',\n    'info2-1': {\n      label1: 'info2(1)-basic1',\n      label2: 'info2(1)-basic2'\n    }\n  }\n};\n\nlet menuInfo = [\n  { title: '홈', linkUrl: '/home', success: true },\n  { title: '아코디언 부트스트랩', linkUrl: '/accordion-b', success: true },\n  {\n    title: '아코디언 메트리얼',\n    linkUrl: '/accordion-m?aa=aa&bb=bb',\n    success: true\n  },\n  { title: '탭 부트스트랩', linkUrl: '/tab-b', success: true },\n  { title: '탭 메트리얼', linkUrl: '/tab-m', success: true },\n  { title: '디바이스', linkUrl: '/device-basic', success: true },\n  { title: '하단영역 선택', linkUrl: '/footer-select', success: true },\n  { title: '라디오 스위치', linkUrl: '/checkbox-switch', success: true },\n  { title: '탭 스크롤', linkUrl: '/tab-scroll', success: true },\n  { title: '네이티브 인터페이스', linkUrl: '/native-interface', success: true },\n  { title: '모달 테스트1', linkUrl: '/modal-test-1' },\n  { title: 'sass', linkUrl: '/sass', success: true },\n  { title: '환경변수', linkUrl: '/environment', success: true },\n  { title: '에러테스트', linkUrl: '/error-test', success: true },\n  { title: '클라이언트 에러', linkUrl: '/error-client', success: true },\n  { title: '서버 에러', linkUrl: '/error-server', success: true },\n  { title: '권한 에러', linkUrl: '/error-auth', success: true },\n  { title: '상담톡 목록', linkUrl: '/talk-list', success: true },\n  { title: '상담톡 애니메이션', linkUrl: '/talk-anmation' },\n  { title: '푸쉬 테스트1', linkUrl: '/pushcase-1' },\n  { title: 'Analytics', linkUrl: '/analytics' },\n  { title: '폼 테스트', linkUrl: '/form-test' },\n  { title: '차트 테스트1', linkUrl: '/chartcase-1' },\n  {\n    title: '테이블 페이징 스크롤',\n    linkUrl: '/table-page-scroll',\n    success: true\n  },\n  {\n    title: '이미지 페이징 스크롤',\n    linkUrl: '/image-page-scroll',\n    success: true\n  },\n  { title: '리액트 에러 테스트', linkUrl: '/react-error-test', success: true },\n  { title: '퍼블리싱 테스트', linkUrl: '/publish-test', success: true },\n  {\n    title: '불변 자료구조 테스트',\n    linkUrl: '/immutability-test',\n    success: true\n  },\n  {\n    title: '불변 자료구조 테스트2',\n    linkUrl: '/immutability-test2',\n    success: true\n  },\n  {\n    title: '저장소 테스트',\n    linkUrl: '/store-test',\n    success: true\n  },\n  {\n    title: '저장소 테스트2',\n    linkUrl: '/store-test2',\n    success: true\n  },\n  {\n    title: '도메인 테스트(list)',\n    linkUrl: '/domain-list',\n    success: true\n  },\n  {\n    title: '도메인 테스트(detail)',\n    linkUrl: '/domain-detail?id=1',\n    success: true\n  },\n  {\n    title: 'Api 테스트(list)',\n    linkUrl: '/api-list',\n    success: true\n  },\n  {\n    title: 'Api 테스트(detail)',\n    linkUrl: '/api-detail?id=1',\n    success: true\n  },\n  {\n    title: 'company-code-test',\n    linkUrl: '/company-code-test',\n    success: true\n  }\n];\n\nlet configInfo = {\n  contractInputFirstSize: 2,\n  contractInputSecondSize: 3,\n  contractInputThirdSize: 4\n};\n\nexport const basicCompanyInfo = companyInfo;\n\nexport const basicMenuInfo = menuInfo;\n\nexport const basicConfigInfo = configInfo;\n","import _ from 'lodash';\nimport { basicCompanyInfo, basicMenuInfo, basicConfigInfo } from './basic';\n\nlet companyInfo = {\n  info1: {\n    label1: 'info1-inchon1'\n  },\n  info2: {\n    label2: 'info2-inchon2',\n    'info2-1': {\n      label1: 'info2(1)-inchon1'\n    }\n  },\n  inchonLabel1: 'inchonOnly',\n  inchonInfo: {\n    label1: 'inchonInfo-label1',\n    label2: 'inchonInfo-label2'\n  }\n};\n\nlet menuInfo = [\n  { title: '디바이스', linkUrl: '/device-basic', except: true },\n  { title: '하단영역 선택', linkUrl: '/footer-select', except: true },\n  { title: '라디오 스위치', linkUrl: '/checkbox-switch', except: true },\n  { title: '탭 스크롤', linkUrl: '/tab-scroll', except: true },\n  { title: '아코디언 부트스트랩', linkUrl: '/accordion-b', except: true },\n  {\n    title: 'company-inchon-test',\n    linkUrl: '/company-inchon-test',\n    success: true\n  }\n];\n\nlet configInfo = {\n  contractInputFirstSize: 5,\n  contractInputSecondSize: 5,\n  contractInputThirdSize: 5\n};\n\nexport const inchonCompanyInfo = _.defaultsDeep(\n  {},\n  companyInfo,\n  basicCompanyInfo\n);\n\nexport const inchonMenuInfo = _.unionBy(\n  menuInfo,\n  basicMenuInfo,\n  'linkUrl'\n).filter(info => {\n  return !info.except;\n});\n\nexport const inchonConfigInfo = _.defaultsDeep({}, configInfo, basicConfigInfo);\n","import _ from 'lodash';\nimport { basicCompanyInfo, basicMenuInfo, basicConfigInfo } from './basic';\n\nlet companyInfo = {\n  label1: 'seoul',\n  label2: 'seoul2',\n  info1: {\n    label1: 'info1-seoul1',\n    label2: 'info1-seoul2'\n  },\n  info2: {\n    label1: 'info2-seoul1',\n    label2: 'info2-seoul2',\n    'info2-1': {\n      label1: 'info2(1)-seoul1',\n      label2: 'info2(1)-seoul2'\n    }\n  },\n  seoulLabel1: 'seoulOnly',\n  seoulInfo: {\n    label1: 'seoulInfo-label1',\n    label2: 'seoulInfo-label2'\n  }\n};\n\nlet menuInfo = [\n  { title: '홈', linkUrl: '/home', except: true },\n  { title: '아코디언 부트스트랩', linkUrl: '/accordion-b', except: true },\n  {\n    title: '아코디언 메트리얼',\n    linkUrl: '/accordion-m?aa=aa&bb=bb',\n    except: true\n  },\n  { title: '탭 부트스트랩', linkUrl: '/tab-b', except: true },\n  { title: '탭 메트리얼', linkUrl: '/tab-m', except: true },\n  {\n    title: 'company-code-test',\n    linkUrl: '/company-code-test',\n    success: true\n  },\n  {\n    title: 'company-seoul-test',\n    linkUrl: '/company-seoul-test',\n    success: true\n  }\n];\n\nlet configInfo = {\n  contractInputFirstSize: 2,\n  contractInputSecondSize: 3,\n  contractInputThirdSize: 7\n};\n\nexport const seoulCompanyInfo = _.defaultsDeep(\n  {},\n  companyInfo,\n  basicCompanyInfo\n);\n\nexport const seoulMenuInfo = _.unionBy(\n  menuInfo,\n  basicMenuInfo,\n  'linkUrl'\n).filter(info => {\n  return !info.except;\n});\n\nexport const seoulConfigInfo = _.defaultsDeep({}, configInfo, basicConfigInfo);\n","import { inchonCompanyInfo } from './inchon';\nimport { seoulCompanyInfo } from './seoul';\nimport Constant from '../../config/Constant';\n\nlet CompanyInfo = {};\nCompanyInfo[Constant.COMPANY_CODE_SEOUL] = seoulCompanyInfo;\nCompanyInfo[Constant.COMPANY_CODE_INCHON] = inchonCompanyInfo;\n\nexport default CompanyInfo;\n","import { inchonMenuInfo } from './inchon';\nimport { seoulMenuInfo } from './seoul';\nimport Constant from '../../config/Constant';\n\nlet MenuInfo = {};\nMenuInfo[Constant.COMPANY_CODE_SEOUL] = seoulMenuInfo;\nMenuInfo[Constant.COMPANY_CODE_INCHON] = inchonMenuInfo;\n\nexport default MenuInfo;\n","import { inchonConfigInfo } from './inchon';\nimport { seoulConfigInfo } from './seoul';\nimport Constant from '../../config/Constant';\n\nlet ConfigInfo = {};\nConfigInfo[Constant.COMPANY_CODE_SEOUL] = seoulConfigInfo;\nConfigInfo[Constant.COMPANY_CODE_INCHON] = inchonConfigInfo;\n\nexport default ConfigInfo;\n","import { observable, action } from 'mobx';\nimport Config from '../config/Config';\nimport CompanyInfo from './company/company';\nimport MenuInfo from './company/menu';\nimport ConfigInfo from './company/config';\nimport _ from 'lodash';\n\nclass CompanyStore {\n  @observable companyCode = Config.defaultCompanyCode;\n  @observable companyInfo = {};\n  @observable menuInfo = [];\n  @observable configInfo = {};\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.companyInfo = CompanyInfo[this.companyCode];\n    this.menuInfo = MenuInfo[this.companyCode];\n    this.configInfo = ConfigInfo[this.companyCode];\n  }\n\n  @action\n  setCompanyCode(companyCode) {\n    this.companyCode = companyCode;\n    this.companyInfo = CompanyInfo[companyCode];\n    this.menuInfo = MenuInfo[companyCode];\n    this.configInfo = ConfigInfo[companyCode];\n  }\n\n  @action\n  getCompanyInfoByKey(key) {\n    return _.get(this.companyInfo, key);\n  }\n\n  @action\n  reloadPageByCompanyCode(companyCode) {\n    window.location.href = '/#/?companyCode=' + companyCode;\n    window.location.reload();\n  }\n}\n\nexport default CompanyStore;\n","import RootStore from './RootStore';\n\nlet rootStore = new RootStore();\n\n/*\n\n    rootStore : store 간의 통신을 도와주는 최상위 store\n    appStore : 앱 전반적인 관리를 하는 store\n\n*/\n\n/*\n\n    store 추가 방법\n     1.store 파일을 만든다\n     2.RootStore.js 파일에 새로 생성한 store를 주입시킨다\n     3.stores.js store 변수의 key값으로 새로 생성한 store를 추가한다\n     4.FrontIssueStore.js : 프론트 테스트 store\n     5.UiStore.js : UI store\n     6.TestStore.js : Test store\n     7.CompanyStore.js : Company Store\n\n*/\n\nlet stores = {\n  rootStore: rootStore,\n  appStore: rootStore.appStore,\n  nativeStore: rootStore.nativeStore,\n  frontIssueStore: rootStore.frontIssueStore,\n  uiStore: rootStore.uiStore,\n  testStore: rootStore.testStore,\n  companyStore: rootStore.companyStore\n};\n\nexport default stores;\n","import AppStore from './AppStore';\nimport UiStore from './UiStore';\nimport TestStore from './TestStore';\nimport CompanyStore from './CompanyStore';\n\nclass RootStore {\n  constructor() {\n    this.appStore = new AppStore(this);\n    this.uiStore = new UiStore(this);\n    this.testStore = new TestStore(this, 'tableScroll');\n    this.companyStore = new CompanyStore(this);\n  }\n}\n\nexport default RootStore;\n","import './css/common.scss';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Constant from './config/Constant';\nimport App from './App';\nimport App2 from './App2';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport { Provider } from 'mobx-react';\nimport stores from './stores/stores';\nimport queryString from 'query-string';\n\nimport Logger from './utils/Logger';\nimport AppHistory from './utils/AppHistory';\nimport Config from './config/Config';\n\nlet urlQuery = queryString.parse(AppHistory.location.search);\nlet entryHashString = location.hash;\nlet entryFullUri = entryHashString.substr(2);\nlet entryUri = entryFullUri;\nif (entryFullUri.indexOf('?') !== -1) {\n  entryUri = entryUri.substr(0, entryUri.indexOf('?'));\n}\n\nLogger.info('entryUri : ' + (entryUri || Config.defaultUri));\nLogger.info('index.js queryInfo : ' + JSON.stringify(urlQuery));\n\nAppHistory.block((location, action) => {\n  Logger.info('on route block');\n  return true;\n});\n\nAppHistory.listen((location, action) => {\n  // location.pathname ---> route시에 공통으로 구글 서비스 전달\n  Logger.info('AppHistory listen : ' + location.pathname);\n});\n\n// state의 상태는 action을 통해서만 가능하게끔 셋팅\nconfigure({\n  enforceActions: true\n});\n\nlet AppComponent = <App />;\n\nlet appType = urlQuery.appType;\nif (appType && appType === 'app2') {\n  AppComponent = <App2 />;\n}\n\nlet companyCode = urlQuery.companyCode;\nif (companyCode) {\n  stores.companyStore.setCompanyCode(companyCode);\n}\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Router>{AppComponent}</Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}